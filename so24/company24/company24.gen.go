// Code generated by gowsdl DO NOT EDIT.

package company24

import (
	"context"
	"encoding/xml"
	"time"

	"github.com/hooklift/gowsdl/soap"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type CompanyType string

const (
	CompanyTypeNone CompanyType = "None"

	CompanyTypeLead CompanyType = "Lead"

	CompanyTypeConsumer CompanyType = "Consumer"

	CompanyTypeBusiness CompanyType = "Business"

	CompanyTypeSupplier CompanyType = "Supplier"
)

type DistributionMethod string

const (
	DistributionMethodUnchanged DistributionMethod = "Unchanged"

	DistributionMethodPrint DistributionMethod = "Print"

	DistributionMethodEMail DistributionMethod = "EMail"

	DistributionMethodElectronicInvoice DistributionMethod = "ElectronicInvoice"

	DistributionMethodDefault DistributionMethod = "Default"
)

type CurrencyType string

const (
	CurrencyTypeLOCAL CurrencyType = "LOCAL"

	CurrencyTypeAED CurrencyType = "AED"

	CurrencyTypeAFN CurrencyType = "AFN"

	CurrencyTypeALL CurrencyType = "ALL"

	CurrencyTypeAMD CurrencyType = "AMD"

	CurrencyTypeANG CurrencyType = "ANG"

	CurrencyTypeAOA CurrencyType = "AOA"

	CurrencyTypeARS CurrencyType = "ARS"

	CurrencyTypeAUD CurrencyType = "AUD"

	CurrencyTypeAWG CurrencyType = "AWG"

	CurrencyTypeAZN CurrencyType = "AZN"

	CurrencyTypeBAM CurrencyType = "BAM"

	CurrencyTypeBBD CurrencyType = "BBD"

	CurrencyTypeBDT CurrencyType = "BDT"

	CurrencyTypeBGN CurrencyType = "BGN"

	CurrencyTypeBHD CurrencyType = "BHD"

	CurrencyTypeBIF CurrencyType = "BIF"

	CurrencyTypeBMD CurrencyType = "BMD"

	CurrencyTypeBND CurrencyType = "BND"

	CurrencyTypeBOB CurrencyType = "BOB"

	CurrencyTypeBOV CurrencyType = "BOV"

	CurrencyTypeBRL CurrencyType = "BRL"

	CurrencyTypeBSD CurrencyType = "BSD"

	CurrencyTypeBTN CurrencyType = "BTN"

	CurrencyTypeBWP CurrencyType = "BWP"

	CurrencyTypeBYN CurrencyType = "BYN"

	CurrencyTypeBYR CurrencyType = "BYR"

	CurrencyTypeBZD CurrencyType = "BZD"

	CurrencyTypeCAD CurrencyType = "CAD"

	CurrencyTypeCDF CurrencyType = "CDF"

	CurrencyTypeCHE CurrencyType = "CHE"

	CurrencyTypeCHF CurrencyType = "CHF"

	CurrencyTypeCHW CurrencyType = "CHW"

	CurrencyTypeCLF CurrencyType = "CLF"

	CurrencyTypeCLP CurrencyType = "CLP"

	CurrencyTypeCNY CurrencyType = "CNY"

	CurrencyTypeCOP CurrencyType = "COP"

	CurrencyTypeCOU CurrencyType = "COU"

	CurrencyTypeCRC CurrencyType = "CRC"

	CurrencyTypeCUC CurrencyType = "CUC"

	CurrencyTypeCUP CurrencyType = "CUP"

	CurrencyTypeCVE CurrencyType = "CVE"

	CurrencyTypeCZK CurrencyType = "CZK"

	CurrencyTypeDJF CurrencyType = "DJF"

	CurrencyTypeDKK CurrencyType = "DKK"

	CurrencyTypeDOP CurrencyType = "DOP"

	CurrencyTypeDZD CurrencyType = "DZD"

	CurrencyTypeEEK CurrencyType = "EEK"

	CurrencyTypeEGP CurrencyType = "EGP"

	CurrencyTypeERN CurrencyType = "ERN"

	CurrencyTypeETB CurrencyType = "ETB"

	CurrencyTypeEUR CurrencyType = "EUR"

	CurrencyTypeFJD CurrencyType = "FJD"

	CurrencyTypeFKP CurrencyType = "FKP"

	CurrencyTypeGBP CurrencyType = "GBP"

	CurrencyTypeGEL CurrencyType = "GEL"

	CurrencyTypeGHS CurrencyType = "GHS"

	CurrencyTypeGIP CurrencyType = "GIP"

	CurrencyTypeGMD CurrencyType = "GMD"

	CurrencyTypeGNF CurrencyType = "GNF"

	CurrencyTypeGTQ CurrencyType = "GTQ"

	CurrencyTypeGYD CurrencyType = "GYD"

	CurrencyTypeHKD CurrencyType = "HKD"

	CurrencyTypeHNL CurrencyType = "HNL"

	CurrencyTypeHRK CurrencyType = "HRK"

	CurrencyTypeHTG CurrencyType = "HTG"

	CurrencyTypeHUF CurrencyType = "HUF"

	CurrencyTypeIDR CurrencyType = "IDR"

	CurrencyTypeILS CurrencyType = "ILS"

	CurrencyTypeINR CurrencyType = "INR"

	CurrencyTypeIQD CurrencyType = "IQD"

	CurrencyTypeIRR CurrencyType = "IRR"

	CurrencyTypeISK CurrencyType = "ISK"

	CurrencyTypeJMD CurrencyType = "JMD"

	CurrencyTypeJOD CurrencyType = "JOD"

	CurrencyTypeJPY CurrencyType = "JPY"

	CurrencyTypeKES CurrencyType = "KES"

	CurrencyTypeKGS CurrencyType = "KGS"

	CurrencyTypeKHR CurrencyType = "KHR"

	CurrencyTypeKMF CurrencyType = "KMF"

	CurrencyTypeKPW CurrencyType = "KPW"

	CurrencyTypeKRW CurrencyType = "KRW"

	CurrencyTypeKWD CurrencyType = "KWD"

	CurrencyTypeKYD CurrencyType = "KYD"

	CurrencyTypeKZT CurrencyType = "KZT"

	CurrencyTypeLAK CurrencyType = "LAK"

	CurrencyTypeLBP CurrencyType = "LBP"

	CurrencyTypeLKR CurrencyType = "LKR"

	CurrencyTypeLRD CurrencyType = "LRD"

	CurrencyTypeLSL CurrencyType = "LSL"

	CurrencyTypeLTL CurrencyType = "LTL"

	CurrencyTypeLVL CurrencyType = "LVL"

	CurrencyTypeLYD CurrencyType = "LYD"

	CurrencyTypeMAD CurrencyType = "MAD"

	CurrencyTypeMDL CurrencyType = "MDL"

	CurrencyTypeMGA CurrencyType = "MGA"

	CurrencyTypeMKD CurrencyType = "MKD"

	CurrencyTypeMMK CurrencyType = "MMK"

	CurrencyTypeMNT CurrencyType = "MNT"

	CurrencyTypeMOP CurrencyType = "MOP"

	CurrencyTypeMRO CurrencyType = "MRO"

	CurrencyTypeMTL CurrencyType = "MTL"

	CurrencyTypeMUR CurrencyType = "MUR"

	CurrencyTypeMVR CurrencyType = "MVR"

	CurrencyTypeMWK CurrencyType = "MWK"

	CurrencyTypeMXN CurrencyType = "MXN"

	CurrencyTypeMXV CurrencyType = "MXV"

	CurrencyTypeMYR CurrencyType = "MYR"

	CurrencyTypeMZN CurrencyType = "MZN"

	CurrencyTypeNAD CurrencyType = "NAD"

	CurrencyTypeNGN CurrencyType = "NGN"

	CurrencyTypeNIO CurrencyType = "NIO"

	CurrencyTypeNOK CurrencyType = "NOK"

	CurrencyTypeNPR CurrencyType = "NPR"

	CurrencyTypeNZD CurrencyType = "NZD"

	CurrencyTypeOMR CurrencyType = "OMR"

	CurrencyTypePAB CurrencyType = "PAB"

	CurrencyTypePEN CurrencyType = "PEN"

	CurrencyTypePGK CurrencyType = "PGK"

	CurrencyTypePHP CurrencyType = "PHP"

	CurrencyTypePKR CurrencyType = "PKR"

	CurrencyTypePLN CurrencyType = "PLN"

	CurrencyTypePYG CurrencyType = "PYG"

	CurrencyTypeQAR CurrencyType = "QAR"

	CurrencyTypeRON CurrencyType = "RON"

	CurrencyTypeRSD CurrencyType = "RSD"

	CurrencyTypeRUB CurrencyType = "RUB"

	CurrencyTypeRWF CurrencyType = "RWF"

	CurrencyTypeSAR CurrencyType = "SAR"

	CurrencyTypeSBD CurrencyType = "SBD"

	CurrencyTypeSCR CurrencyType = "SCR"

	CurrencyTypeSDG CurrencyType = "SDG"

	CurrencyTypeSEK CurrencyType = "SEK"

	CurrencyTypeSGD CurrencyType = "SGD"

	CurrencyTypeSHP CurrencyType = "SHP"

	CurrencyTypeSKK CurrencyType = "SKK"

	CurrencyTypeSLL CurrencyType = "SLL"

	CurrencyTypeSOS CurrencyType = "SOS"

	CurrencyTypeSRD CurrencyType = "SRD"

	CurrencyTypeSTD CurrencyType = "STD"

	CurrencyTypeSYP CurrencyType = "SYP"

	CurrencyTypeSZL CurrencyType = "SZL"

	CurrencyTypeTHB CurrencyType = "THB"

	CurrencyTypeTJS CurrencyType = "TJS"

	CurrencyTypeTMT CurrencyType = "TMT"

	CurrencyTypeTND CurrencyType = "TND"

	CurrencyTypeTOP CurrencyType = "TOP"

	CurrencyTypeTRY CurrencyType = "TRY"

	CurrencyTypeTTD CurrencyType = "TTD"

	CurrencyTypeTWD CurrencyType = "TWD"

	CurrencyTypeTZS CurrencyType = "TZS"

	CurrencyTypeUAH CurrencyType = "UAH"

	CurrencyTypeUGX CurrencyType = "UGX"

	CurrencyTypeUSD CurrencyType = "USD"

	CurrencyTypeUYU CurrencyType = "UYU"

	CurrencyTypeUZS CurrencyType = "UZS"

	CurrencyTypeVEF CurrencyType = "VEF"

	CurrencyTypeVND CurrencyType = "VND"

	CurrencyTypeVUV CurrencyType = "VUV"

	CurrencyTypeWST CurrencyType = "WST"

	CurrencyTypeXAF CurrencyType = "XAF"

	CurrencyTypeXAG CurrencyType = "XAG"

	CurrencyTypeXAU CurrencyType = "XAU"

	CurrencyTypeXBA CurrencyType = "XBA"

	CurrencyTypeXBB CurrencyType = "XBB"

	CurrencyTypeXBC CurrencyType = "XBC"

	CurrencyTypeXBD CurrencyType = "XBD"

	CurrencyTypeXCD CurrencyType = "XCD"

	CurrencyTypeXDR CurrencyType = "XDR"

	CurrencyTypeXFU CurrencyType = "XFU"

	CurrencyTypeXOF CurrencyType = "XOF"

	CurrencyTypeXPD CurrencyType = "XPD"

	CurrencyTypeXPF CurrencyType = "XPF"

	CurrencyTypeXPT CurrencyType = "XPT"

	CurrencyTypeXTS CurrencyType = "XTS"

	CurrencyTypeXXX CurrencyType = "XXX"

	CurrencyTypeYER CurrencyType = "YER"

	CurrencyTypeZAR CurrencyType = "ZAR"

	CurrencyTypeZMK CurrencyType = "ZMK"

	CurrencyTypeZWL CurrencyType = "ZWL"

	CurrencyTypeZWD CurrencyType = "ZWD"
)

type DeleteRelations struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteRelations"`

	Relations *ArrayOfRelation `xml:"relations,omitempty" json:"relations,omitempty"`
}

type DeleteRelationsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteRelationsResponse"`

	DeleteRelationsResult *ArrayOfRelation `xml:"DeleteRelationsResult,omitempty" json:"DeleteRelationsResult,omitempty"`
}

type DeleteCompanies struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteCompanies"`

	Companies *ArrayOfCompany `xml:"companies,omitempty" json:"companies,omitempty"`
}

type DeleteCompaniesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteCompaniesResponse"`

	DeleteCompaniesResult *ArrayOfCompany `xml:"DeleteCompaniesResult,omitempty" json:"DeleteCompaniesResult,omitempty"`
}

type SaveRelations struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveRelations"`

	Relations *ArrayOfRelation `xml:"relations,omitempty" json:"relations,omitempty"`
}

type SaveRelationsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveRelationsResponse"`

	SaveRelationsResult *ArrayOfRelation `xml:"SaveRelationsResult,omitempty" json:"SaveRelationsResult,omitempty"`
}

type DeleteMaps struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteMaps"`

	Maps *ArrayOfCompanyMap `xml:"maps,omitempty" json:"maps,omitempty"`
}

type DeleteMapsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteMapsResponse"`

	DeleteMapsResult *ArrayOfCompanyMap `xml:"DeleteMapsResult,omitempty" json:"DeleteMapsResult,omitempty"`
}

type SaveMaps struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveMaps"`

	Maps *ArrayOfCompanyMap `xml:"maps,omitempty" json:"maps,omitempty"`
}

type SaveMapsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveMapsResponse"`

	SaveMapsResult *ArrayOfCompanyMap `xml:"SaveMapsResult,omitempty" json:"SaveMapsResult,omitempty"`
}

type GetCompanySyncList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCompanySyncList"`

	SyncSearchParameters *SyncSearchParameters `xml:"syncSearchParameters,omitempty" json:"syncSearchParameters,omitempty"`
}

type GetCompanySyncListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCompanySyncListResponse"`

	GetCompanySyncListResult *PageOfSyncCompany `xml:"GetCompanySyncListResult,omitempty" json:"GetCompanySyncListResult,omitempty"`
}

type GetCompanies struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCompanies"`

	SearchParams *CompanySearchParameters `xml:"searchParams,omitempty" json:"searchParams,omitempty"`

	ReturnProperties *ArrayOfString `xml:"returnProperties,omitempty" json:"returnProperties,omitempty"`
}

type GetCompaniesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCompaniesResponse"`

	GetCompaniesResult *ArrayOfCompany `xml:"GetCompaniesResult,omitempty" json:"GetCompaniesResult,omitempty"`
}

type GetCategories struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCategories"`
}

type GetCategoriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCategoriesResponse"`

	GetCategoriesResult *ArrayOfCategory `xml:"GetCategoriesResult,omitempty" json:"GetCategoriesResult,omitempty"`
}

type SaveCategories struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveCategories"`

	Categories *ArrayOfCategory `xml:"categories,omitempty" json:"categories,omitempty"`
}

type SaveCategoriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveCategoriesResponse"`

	SaveCategoriesResult *ArrayOfCategory `xml:"SaveCategoriesResult,omitempty" json:"SaveCategoriesResult,omitempty"`
}

type GetCustomerCategories struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCustomerCategories"`

	CustomerId int32 `xml:"customerId,omitempty" json:"customerId,omitempty"`
}

type GetCustomerCategoriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCustomerCategoriesResponse"`

	GetCustomerCategoriesResult *ArrayOfInt `xml:"GetCustomerCategoriesResult,omitempty" json:"GetCustomerCategoriesResult,omitempty"`
}

type GetIndustries struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetIndustries"`
}

type GetIndustriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetIndustriesResponse"`

	GetIndustriesResult *ArrayOfKeyValuePair `xml:"GetIndustriesResult,omitempty" json:"GetIndustriesResult,omitempty"`
}

type SaveCustomerCategories struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveCustomerCategories"`

	CustomerCategories *ArrayOfKeyValuePair `xml:"customerCategories,omitempty" json:"customerCategories,omitempty"`
}

type SaveCustomerCategoriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveCustomerCategoriesResponse"`

	SaveCustomerCategoriesResult *ArrayOfAPIException `xml:"SaveCustomerCategoriesResult,omitempty" json:"SaveCustomerCategoriesResult,omitempty"`
}

type DeleteCustomerCategories struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteCustomerCategories"`

	CustomerCategories *ArrayOfKeyValuePair `xml:"customerCategories,omitempty" json:"customerCategories,omitempty"`
}

type DeleteCustomerCategoriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices DeleteCustomerCategoriesResponse"`

	DeleteCustomerCategoriesResult *ArrayOfAPIException `xml:"DeleteCustomerCategoriesResult,omitempty" json:"DeleteCustomerCategoriesResult,omitempty"`
}

type GetCustomerCategoryTree struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCustomerCategoryTree"`
}

type GetCustomerCategoryTreeResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCustomerCategoryTreeResponse"`

	GetCustomerCategoryTreeResult *ArrayOfKeyValuePair `xml:"GetCustomerCategoryTreeResult,omitempty" json:"GetCustomerCategoryTreeResult,omitempty"`
}

type SaveCompanies struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveCompanies"`

	Companies *ArrayOfCompany `xml:"companies,omitempty" json:"companies,omitempty"`
}

type SaveCompaniesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveCompaniesResponse"`

	SaveCompaniesResult *ArrayOfCompany `xml:"SaveCompaniesResult,omitempty" json:"SaveCompaniesResult,omitempty"`
}

type GetStatuses struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetStatuses"`
}

type GetStatusesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetStatusesResponse"`

	GetStatusesResult *ArrayOfKeyValuePair `xml:"GetStatusesResult,omitempty" json:"GetStatusesResult,omitempty"`
}

type GetCRMGroups struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCRMGroups"`
}

type GetCRMGroupsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCRMGroupsResponse"`

	GetCRMGroupsResult *ArrayOfGroup `xml:"GetCRMGroupsResult,omitempty" json:"GetCRMGroupsResult,omitempty"`
}

type ArrayOfRelation struct {
	Relation []*Relation `xml:"Relation,omitempty" json:"Relation,omitempty"`
}

type Relation struct {
	ContactId int32 `xml:"ContactId,omitempty" json:"ContactId,omitempty"`

	CompanyId int32 `xml:"CompanyId,omitempty" json:"CompanyId,omitempty"`

	FirstName string `xml:"FirstName,omitempty" json:"FirstName,omitempty"`

	LastName string `xml:"LastName,omitempty" json:"LastName,omitempty"`

	Role string `xml:"Role,omitempty" json:"Role,omitempty"`

	RoleId int32 `xml:"RoleId,omitempty" json:"RoleId,omitempty"`

	PhoneNumbers *PhoneNumbers `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	EmailAddresses *EmailAddresses `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Fax string `xml:"Fax,omitempty" json:"Fax,omitempty"`
}

type PhoneNumbers struct {
	Home *PhoneNumber `xml:"Home,omitempty" json:"Home,omitempty"`

	Fax *PhoneNumber `xml:"Fax,omitempty" json:"Fax,omitempty"`

	Mobile *PhoneNumber `xml:"Mobile,omitempty" json:"Mobile,omitempty"`

	Primary *PhoneNumber `xml:"Primary,omitempty" json:"Primary,omitempty"`

	Work *PhoneNumber `xml:"Work,omitempty" json:"Work,omitempty"`
}

type PhoneNumber struct {
	Description string `xml:"Description,omitempty" json:"Description,omitempty"`

	Value string `xml:"Value,omitempty" json:"Value,omitempty"`
}

type EmailAddresses struct {
	Home *EmailAddress `xml:"Home,omitempty" json:"Home,omitempty"`

	Invoice *EmailAddress `xml:"Invoice,omitempty" json:"Invoice,omitempty"`

	Primary *EmailAddress `xml:"Primary,omitempty" json:"Primary,omitempty"`

	Work *EmailAddress `xml:"Work,omitempty" json:"Work,omitempty"`

	Alternative *EmailAddress `xml:"Alternative,omitempty" json:"Alternative,omitempty"`
}

type EmailAddress struct {
	Description string `xml:"Description,omitempty" json:"Description,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfCompany struct {
	Company []*Company `xml:"Company,omitempty" json:"Company,omitempty"`
}

type Company struct {
	APIException *APIException `xml:"APIException,omitempty" json:"APIException,omitempty"`

	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	ExternalId string `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	OrganizationNumber string `xml:"OrganizationNumber,omitempty" json:"OrganizationNumber,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	FirstName string `xml:"FirstName,omitempty" json:"FirstName,omitempty"`

	NickName string `xml:"NickName,omitempty" json:"NickName,omitempty"`

	Addresses *Addresses `xml:"Addresses,omitempty" json:"Addresses,omitempty"`

	PhoneNumbers *PhoneNumbers `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	EmailAddresses *EmailAddresses `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Url string `xml:"Url,omitempty" json:"Url,omitempty"`

	Country string `xml:"Country,omitempty" json:"Country,omitempty"`

	Note string `xml:"Note,omitempty" json:"Note,omitempty"`

	InvoiceLanguage string `xml:"InvoiceLanguage,omitempty" json:"InvoiceLanguage,omitempty"`

	Type *CompanyType `xml:"Type,omitempty" json:"Type,omitempty"`

	Username string `xml:"Username,omitempty" json:"Username,omitempty"`

	Password string `xml:"Password,omitempty" json:"Password,omitempty"`

	IncorporationDate soap.XSDDateTime `xml:"IncorporationDate,omitempty" json:"IncorporationDate,omitempty"`

	DateCreated soap.XSDDateTime `xml:"DateCreated,omitempty" json:"DateCreated,omitempty"`

	Status int32 `xml:"Status,omitempty" json:"Status,omitempty"`

	PriceList int32 `xml:"PriceList,omitempty" json:"PriceList,omitempty"`

	Owner int32 `xml:"Owner,omitempty" json:"Owner,omitempty"`

	BankAccountNo string `xml:"BankAccountNo,omitempty" json:"BankAccountNo,omitempty"`

	BankAccountType string `xml:"BankAccountType,omitempty" json:"BankAccountType,omitempty"`

	BankAccountCountry string `xml:"BankAccountCountry,omitempty" json:"BankAccountCountry,omitempty"`

	BankAccountBic string `xml:"BankAccountBic,omitempty" json:"BankAccountBic,omitempty"`

	TermsOfDeliveryId int32 `xml:"TermsOfDeliveryId,omitempty" json:"TermsOfDeliveryId,omitempty"`

	AccountDebit int16 `xml:"AccountDebit,omitempty" json:"AccountDebit,omitempty"`

	AccountCredit int16 `xml:"AccountCredit,omitempty" json:"AccountCredit,omitempty"`

	Discount float64 `xml:"Discount,omitempty" json:"Discount,omitempty"`

	TypeGroup int32 `xml:"TypeGroup,omitempty" json:"TypeGroup,omitempty"`

	ShareCapital float64 `xml:"ShareCapital,omitempty" json:"ShareCapital,omitempty"`

	NumberOfEmployees int32 `xml:"NumberOfEmployees,omitempty" json:"NumberOfEmployees,omitempty"`

	Turnover float64 `xml:"Turnover,omitempty" json:"Turnover,omitempty"`

	Profit float64 `xml:"Profit,omitempty" json:"Profit,omitempty"`

	IndustryId int32 `xml:"IndustryId,omitempty" json:"IndustryId,omitempty"`

	MemberNo int32 `xml:"MemberNo,omitempty" json:"MemberNo,omitempty"`

	DateChanged soap.XSDDateTime `xml:"DateChanged,omitempty" json:"DateChanged,omitempty"`

	BlockInvoice bool `xml:"BlockInvoice,omitempty" json:"BlockInvoice,omitempty"`

	Relations *ArrayOfRelation `xml:"Relations,omitempty" json:"Relations,omitempty"`

	Maps *ArrayOfCompanyMap `xml:"Maps,omitempty" json:"Maps,omitempty"`

	DistributionMethod *DistributionMethod `xml:"DistributionMethod,omitempty" json:"DistributionMethod,omitempty"`

	CurrencyId *CurrencyType `xml:"CurrencyId,omitempty" json:"CurrencyId,omitempty"`

	PaymentTime int16 `xml:"PaymentTime,omitempty" json:"PaymentTime,omitempty"`

	GlnNumber string `xml:"GlnNumber,omitempty" json:"GlnNumber,omitempty"`

	Factoring *bool `xml:"Factoring,omitempty" json:"Factoring,omitempty"`

	LedgerCustomerAccount int16 `xml:"LedgerCustomerAccount,omitempty" json:"LedgerCustomerAccount,omitempty"`

	LedgerSupplierAccount int16 `xml:"LedgerSupplierAccount,omitempty" json:"LedgerSupplierAccount,omitempty"`

	VatNumber string `xml:"VatNumber,omitempty" json:"VatNumber,omitempty"`

	Private *bool `xml:"Private,omitempty" json:"Private,omitempty"`

	ExplicitlySpecifyNewCompanyId *bool `xml:"ExplicitlySpecifyNewCompanyId,omitempty" json:"ExplicitlySpecifyNewCompanyId,omitempty"`
}

type APIException struct {
	Type string `xml:"Type,omitempty" json:"Type,omitempty"`

	Message string `xml:"Message,omitempty" json:"Message,omitempty"`

	StackTrace string `xml:"StackTrace,omitempty" json:"StackTrace,omitempty"`
}

type Addresses struct {
	Post *Address `xml:"Post,omitempty" json:"Post,omitempty"`

	Delivery *Address `xml:"Delivery,omitempty" json:"Delivery,omitempty"`

	Visit *Address `xml:"Visit,omitempty" json:"Visit,omitempty"`

	Invoice *Address `xml:"Invoice,omitempty" json:"Invoice,omitempty"`
}

type Address struct {
	Street string `xml:"Street,omitempty" json:"Street,omitempty"`

	State string `xml:"State,omitempty" json:"State,omitempty"`

	PostalCode string `xml:"PostalCode,omitempty" json:"PostalCode,omitempty"`

	PostalArea string `xml:"PostalArea,omitempty" json:"PostalArea,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	City string `xml:"City,omitempty" json:"City,omitempty"`

	Country string `xml:"Country,omitempty" json:"Country,omitempty"`
}

type ArrayOfCompanyMap struct {
	CompanyMap []*CompanyMap `xml:"CompanyMap,omitempty" json:"CompanyMap,omitempty"`
}

type CompanyMap struct {
	MapType int32 `xml:"MapType,omitempty" json:"MapType,omitempty"`

	ExternalId string `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	CompanyId int32 `xml:"CompanyId,omitempty" json:"CompanyId,omitempty"`
}

type SyncSearchParameters struct {
	Page int32 `xml:"Page,omitempty" json:"Page,omitempty"`

	Active *bool `xml:"Active,omitempty" json:"Active,omitempty"`

	ChangedAfter soap.XSDDateTime `xml:"ChangedAfter,omitempty" json:"ChangedAfter,omitempty"`

	RegisteredAfter soap.XSDDateTime `xml:"RegisteredAfter,omitempty" json:"RegisteredAfter,omitempty"`
}

type PageOfSyncCompany struct {
	CurrentPage int64 `xml:"CurrentPage,omitempty" json:"CurrentPage,omitempty"`

	TotalPages int64 `xml:"TotalPages,omitempty" json:"TotalPages,omitempty"`

	TotalItems int64 `xml:"TotalItems,omitempty" json:"TotalItems,omitempty"`

	ItemsPerPage int64 `xml:"ItemsPerPage,omitempty" json:"ItemsPerPage,omitempty"`

	Items *ArrayOfSyncCompany `xml:"Items,omitempty" json:"Items,omitempty"`

	Context struct {
	} `xml:"Context,omitempty" json:"Context,omitempty"`
}

type ArrayOfSyncCompany struct {
	SyncCompany []*SyncCompany `xml:"SyncCompany,omitempty" json:"SyncCompany,omitempty"`
}

type SyncCompany struct {
	CompanyId int32 `xml:"CompanyId,omitempty" json:"CompanyId,omitempty"`

	ExternalId string `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	DateChanged soap.XSDDateTime `xml:"DateChanged,omitempty" json:"DateChanged,omitempty"`

	DateRegistered soap.XSDDateTime `xml:"DateRegistered,omitempty" json:"DateRegistered,omitempty"`

	Active bool `xml:"Active,omitempty" json:"Active,omitempty"`
}

type CompanySearchParameters struct {
	ExternalId string `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	CompanyId int32 `xml:"CompanyId,omitempty" json:"CompanyId,omitempty"`

	CompanyIds *ArrayOfInt `xml:"CompanyIds,omitempty" json:"CompanyIds,omitempty"`

	CompanyName string `xml:"CompanyName,omitempty" json:"CompanyName,omitempty"`

	ChangedAfter soap.XSDDateTime `xml:"ChangedAfter,omitempty" json:"ChangedAfter,omitempty"`

	CompanyEmail string `xml:"CompanyEmail,omitempty" json:"CompanyEmail,omitempty"`

	CompanyPhone string `xml:"CompanyPhone,omitempty" json:"CompanyPhone,omitempty"`

	OrganizationNumber string `xml:"OrganizationNumber,omitempty" json:"OrganizationNumber,omitempty"`
}

type ArrayOfInt struct {
	Int []int32 `xml:"int,omitempty" json:"int,omitempty"`
}

type ArrayOfString struct {
	Astring []*string `xml:"string,omitempty" json:"string,omitempty"`
}

type Category struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	ShowContact bool `xml:"ShowContact,omitempty" json:"ShowContact,omitempty"`

	ShowCompany bool `xml:"ShowCompany,omitempty" json:"ShowCompany,omitempty"`
}

type ArrayOfCategory struct {
	Category []*Category `xml:"Category,omitempty" json:"Category,omitempty"`
}

type KeyValuePair struct {
	Key string `xml:"Key,omitempty" json:"Key,omitempty"`

	Value string `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfKeyValuePair struct {
	KeyValuePair []*KeyValuePair `xml:"KeyValuePair,omitempty" json:"KeyValuePair,omitempty"`
}

type ArrayOfAPIException struct {
	APIException []*APIException `xml:"APIException,omitempty" json:"APIException,omitempty"`
}

type Group struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Type *int32 `xml:"Type,omitempty" json:"Type,omitempty"`

	Members *ArrayOfGroupMember `xml:"Members,omitempty" json:"Members,omitempty"`

	Children *ArrayOfGroup `xml:"Children,omitempty" json:"Children,omitempty"`
}

type ArrayOfGroupMember struct {
	GroupMember []*GroupMember `xml:"GroupMember,omitempty" json:"GroupMember,omitempty"`
}

type GroupMember struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	RoleName string `xml:"RoleName,omitempty" json:"RoleName,omitempty"`

	FirstName string `xml:"FirstName,omitempty" json:"FirstName,omitempty"`

	LastName string `xml:"LastName,omitempty" json:"LastName,omitempty"`
}

type ArrayOfGroup struct {
	Group []*Group `xml:"Group,omitempty" json:"Group,omitempty"`
}

type CompanyServiceSoap interface {

	/* Deletes an array of relations and returns the ones where an delete error occured. */
	DeleteRelations(request *DeleteRelations) (*DeleteRelationsResponse, error)

	DeleteRelationsContext(ctx context.Context, request *DeleteRelations) (*DeleteRelationsResponse, error)

	/* Deletes an array of companies and returns the ones where an delete error occured. */
	DeleteCompanies(request *DeleteCompanies) (*DeleteCompaniesResponse, error)

	DeleteCompaniesContext(ctx context.Context, request *DeleteCompanies) (*DeleteCompaniesResponse, error)

	/* Saves an array of relations and returns the ones where an error occured. */
	SaveRelations(request *SaveRelations) (*SaveRelationsResponse, error)

	SaveRelationsContext(ctx context.Context, request *SaveRelations) (*SaveRelationsResponse, error)

	/* Deletes an array of maps and returns the ones where an error occured. */
	DeleteMaps(request *DeleteMaps) (*DeleteMapsResponse, error)

	DeleteMapsContext(ctx context.Context, request *DeleteMaps) (*DeleteMapsResponse, error)

	/* Saves an array of maps and returns the ones where an error occured. */
	SaveMaps(request *SaveMaps) (*SaveMapsResponse, error)

	SaveMapsContext(ctx context.Context, request *SaveMaps) (*SaveMapsResponse, error)

	/* Gets a list of basic Company data that can be used for syncing a full set of data with the GetCompanies method */
	GetCompanySyncList(request *GetCompanySyncList) (*GetCompanySyncListResponse, error)

	GetCompanySyncListContext(ctx context.Context, request *GetCompanySyncList) (*GetCompanySyncListResponse, error)

	/* Gets a list of companies based on search parameters. You have to specify which properties you want returned. */
	GetCompanies(request *GetCompanies) (*GetCompaniesResponse, error)

	GetCompaniesContext(ctx context.Context, request *GetCompanies) (*GetCompaniesResponse, error)

	/* Returns an array of CRM Categories */
	GetCategories(request *GetCategories) (*GetCategoriesResponse, error)

	GetCategoriesContext(ctx context.Context, request *GetCategories) (*GetCategoriesResponse, error)

	/* Saves an array of CRM Categories */
	SaveCategories(request *SaveCategories) (*SaveCategoriesResponse, error)

	SaveCategoriesContext(ctx context.Context, request *SaveCategories) (*SaveCategoriesResponse, error)

	/* Returns an array of category ids linked to a specified customer */
	GetCustomerCategories(request *GetCustomerCategories) (*GetCustomerCategoriesResponse, error)

	GetCustomerCategoriesContext(ctx context.Context, request *GetCustomerCategories) (*GetCustomerCategoriesResponse, error)

	/* Returns a list of Industry Ids and Names */
	GetIndustries(request *GetIndustries) (*GetIndustriesResponse, error)

	GetIndustriesContext(ctx context.Context, request *GetIndustries) (*GetIndustriesResponse, error)

	/* Saves categories to customers (Key=CategoryId, Value=CustomerId) and returns a list of errors (if any) */
	SaveCustomerCategories(request *SaveCustomerCategories) (*SaveCustomerCategoriesResponse, error)

	SaveCustomerCategoriesContext(ctx context.Context, request *SaveCustomerCategories) (*SaveCustomerCategoriesResponse, error)

	/* Deletes categories from customers (Key=CategoryId, Value=CustomerId) and returns a list of errors (if any) */
	DeleteCustomerCategories(request *DeleteCustomerCategories) (*DeleteCustomerCategoriesResponse, error)

	DeleteCustomerCategoriesContext(ctx context.Context, request *DeleteCustomerCategories) (*DeleteCustomerCategoriesResponse, error)

	/* Key = CategoryId, Value = CustomerId */
	GetCustomerCategoryTree(request *GetCustomerCategoryTree) (*GetCustomerCategoryTreeResponse, error)

	GetCustomerCategoryTreeContext(ctx context.Context, request *GetCustomerCategoryTree) (*GetCustomerCategoryTreeResponse, error)

	/* Saves all companies in the array. Please see APIException property for errors. */
	SaveCompanies(request *SaveCompanies) (*SaveCompaniesResponse, error)

	SaveCompaniesContext(ctx context.Context, request *SaveCompanies) (*SaveCompaniesResponse, error)

	/* Get a list of all CRM Statuses. */
	GetStatuses(request *GetStatuses) (*GetStatusesResponse, error)

	GetStatusesContext(ctx context.Context, request *GetStatuses) (*GetStatusesResponse, error)

	/* Get a tree of all CRM Groups. */
	GetCRMGroups(request *GetCRMGroups) (*GetCRMGroupsResponse, error)

	GetCRMGroupsContext(ctx context.Context, request *GetCRMGroups) (*GetCRMGroupsResponse, error)
}

type companyServiceSoap struct {
	client *soap.Client
}

func NewCompanyServiceSoap(client *soap.Client) CompanyServiceSoap {
	return &companyServiceSoap{
		client: client,
	}
}

func (service *companyServiceSoap) DeleteRelationsContext(ctx context.Context, request *DeleteRelations) (*DeleteRelationsResponse, error) {
	response := new(DeleteRelationsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/DeleteRelations", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) DeleteRelations(request *DeleteRelations) (*DeleteRelationsResponse, error) {
	return service.DeleteRelationsContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) DeleteCompaniesContext(ctx context.Context, request *DeleteCompanies) (*DeleteCompaniesResponse, error) {
	response := new(DeleteCompaniesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/DeleteCompanies", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) DeleteCompanies(request *DeleteCompanies) (*DeleteCompaniesResponse, error) {
	return service.DeleteCompaniesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) SaveRelationsContext(ctx context.Context, request *SaveRelations) (*SaveRelationsResponse, error) {
	response := new(SaveRelationsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveRelations", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) SaveRelations(request *SaveRelations) (*SaveRelationsResponse, error) {
	return service.SaveRelationsContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) DeleteMapsContext(ctx context.Context, request *DeleteMaps) (*DeleteMapsResponse, error) {
	response := new(DeleteMapsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/DeleteMaps", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) DeleteMaps(request *DeleteMaps) (*DeleteMapsResponse, error) {
	return service.DeleteMapsContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) SaveMapsContext(ctx context.Context, request *SaveMaps) (*SaveMapsResponse, error) {
	response := new(SaveMapsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveMaps", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) SaveMaps(request *SaveMaps) (*SaveMapsResponse, error) {
	return service.SaveMapsContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetCompanySyncListContext(ctx context.Context, request *GetCompanySyncList) (*GetCompanySyncListResponse, error) {
	response := new(GetCompanySyncListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCompanySyncList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetCompanySyncList(request *GetCompanySyncList) (*GetCompanySyncListResponse, error) {
	return service.GetCompanySyncListContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetCompaniesContext(ctx context.Context, request *GetCompanies) (*GetCompaniesResponse, error) {
	response := new(GetCompaniesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCompanies", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetCompanies(request *GetCompanies) (*GetCompaniesResponse, error) {
	return service.GetCompaniesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetCategoriesContext(ctx context.Context, request *GetCategories) (*GetCategoriesResponse, error) {
	response := new(GetCategoriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCategories", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetCategories(request *GetCategories) (*GetCategoriesResponse, error) {
	return service.GetCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) SaveCategoriesContext(ctx context.Context, request *SaveCategories) (*SaveCategoriesResponse, error) {
	response := new(SaveCategoriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveCategories", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) SaveCategories(request *SaveCategories) (*SaveCategoriesResponse, error) {
	return service.SaveCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetCustomerCategoriesContext(ctx context.Context, request *GetCustomerCategories) (*GetCustomerCategoriesResponse, error) {
	response := new(GetCustomerCategoriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCustomerCategories", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetCustomerCategories(request *GetCustomerCategories) (*GetCustomerCategoriesResponse, error) {
	return service.GetCustomerCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetIndustriesContext(ctx context.Context, request *GetIndustries) (*GetIndustriesResponse, error) {
	response := new(GetIndustriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetIndustries", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetIndustries(request *GetIndustries) (*GetIndustriesResponse, error) {
	return service.GetIndustriesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) SaveCustomerCategoriesContext(ctx context.Context, request *SaveCustomerCategories) (*SaveCustomerCategoriesResponse, error) {
	response := new(SaveCustomerCategoriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveCustomerCategories", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) SaveCustomerCategories(request *SaveCustomerCategories) (*SaveCustomerCategoriesResponse, error) {
	return service.SaveCustomerCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) DeleteCustomerCategoriesContext(ctx context.Context, request *DeleteCustomerCategories) (*DeleteCustomerCategoriesResponse, error) {
	response := new(DeleteCustomerCategoriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/DeleteCustomerCategories", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) DeleteCustomerCategories(request *DeleteCustomerCategories) (*DeleteCustomerCategoriesResponse, error) {
	return service.DeleteCustomerCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetCustomerCategoryTreeContext(ctx context.Context, request *GetCustomerCategoryTree) (*GetCustomerCategoryTreeResponse, error) {
	response := new(GetCustomerCategoryTreeResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCustomerCategoryTree", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetCustomerCategoryTree(request *GetCustomerCategoryTree) (*GetCustomerCategoryTreeResponse, error) {
	return service.GetCustomerCategoryTreeContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) SaveCompaniesContext(ctx context.Context, request *SaveCompanies) (*SaveCompaniesResponse, error) {
	response := new(SaveCompaniesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveCompanies", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) SaveCompanies(request *SaveCompanies) (*SaveCompaniesResponse, error) {
	return service.SaveCompaniesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetStatusesContext(ctx context.Context, request *GetStatuses) (*GetStatusesResponse, error) {
	response := new(GetStatusesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetStatuses", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetStatuses(request *GetStatuses) (*GetStatusesResponse, error) {
	return service.GetStatusesContext(
		context.Background(),
		request,
	)
}

func (service *companyServiceSoap) GetCRMGroupsContext(ctx context.Context, request *GetCRMGroups) (*GetCRMGroupsResponse, error) {
	response := new(GetCRMGroupsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCRMGroups", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *companyServiceSoap) GetCRMGroups(request *GetCRMGroups) (*GetCRMGroupsResponse, error) {
	return service.GetCRMGroupsContext(
		context.Background(),
		request,
	)
}
