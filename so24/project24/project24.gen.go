// Code generated by gowsdl DO NOT EDIT.

package project24

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ProjectNameType string

const (
	ProjectNameTypePlain ProjectNameType = "Plain"

	ProjectNameTypeCompany_Project ProjectNameType = "Company_Project"

	ProjectNameTypeProject_Company ProjectNameType = "Project_Company"
)

type TriState string

const (
	TriStateNone TriState = "none"

	TriStateTrue TriState = "True"

	TriStateFalse TriState = "False"
)

type TimeRegType string

const (
	TimeRegTypeWorkType TimeRegType = "WorkType"

	TimeRegTypeTask TimeRegType = "Task"
)

type ProjectParticipantState string

const (
	ProjectParticipantStateUnknown ProjectParticipantState = "Unknown"

	ProjectParticipantStateInvitationSent ProjectParticipantState = "InvitationSent"

	ProjectParticipantStateParticipating ProjectParticipantState = "Participating"

	ProjectParticipantStateProjectInitiater ProjectParticipantState = "ProjectInitiater"

	ProjectParticipantStateRemoved ProjectParticipantState = "Removed"

	ProjectParticipantStateRemovedBeforeAccept ProjectParticipantState = "RemovedBeforeAccept"

	ProjectParticipantStateInvitationStoppedByReciever ProjectParticipantState = "InvitationStoppedByReciever"

	ProjectParticipantStateInvitationStoppedBySender ProjectParticipantState = "InvitationStoppedBySender"

	ProjectParticipantStateInvitationExpired ProjectParticipantState = "InvitationExpired"

	ProjectParticipantStateInvitationIsResent ProjectParticipantState = "InvitationIsResent"

	ProjectParticipantStateRemovedWhenOpeningProject ProjectParticipantState = "RemovedWhenOpeningProject"

	ProjectParticipantStateNotInvited ProjectParticipantState = "NotInvited"
)

type GetProjectNameList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectNameList"`
}

type GetProjectNameListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectNameListResponse"`

	GetProjectNameListResult *ArrayOfProjectShort `xml:"GetProjectNameListResult,omitempty" json:"GetProjectNameListResult,omitempty"`
}

type GetDeactivatedProjectNameList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetDeactivatedProjectNameList"`
}

type GetDeactivatedProjectNameListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetDeactivatedProjectNameListResponse"`

	GetDeactivatedProjectNameListResult *ArrayOfProjectShort `xml:"GetDeactivatedProjectNameListResult,omitempty" json:"GetDeactivatedProjectNameListResult,omitempty"`
}

type GetProjectList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectList"`

	Ps *ProjectSearch `xml:"Ps,omitempty" json:"Ps,omitempty"`
}

type GetProjectListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectListResponse"`

	GetProjectListResult *ArrayOfProject `xml:"GetProjectListResult,omitempty" json:"GetProjectListResult,omitempty"`
}

type GetProjectsDetailed struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectsDetailed"`

	Ps *ProjectSearch `xml:"Ps,omitempty" json:"Ps,omitempty"`
}

type GetProjectsDetailedResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectsDetailedResponse"`

	GetProjectsDetailedResult *ArrayOfProject `xml:"GetProjectsDetailedResult,omitempty" json:"GetProjectsDetailedResult,omitempty"`
}

type GetSingleProject struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetSingleProject"`

	ProjectId int32 `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetSingleProjectResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetSingleProjectResponse"`

	GetSingleProjectResult *Project `xml:"GetSingleProjectResult,omitempty" json:"GetSingleProjectResult,omitempty"`
}

type GetProjectTasks struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectTasks"`

	ProjectId int32 `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetProjectTasksResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectTasksResponse"`

	GetProjectTasksResult *ArrayOfTask `xml:"GetProjectTasksResult,omitempty" json:"GetProjectTasksResult,omitempty"`
}

type SaveProjectTask struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveProjectTask"`

	Task *Task `xml:"task,omitempty" json:"task,omitempty"`
}

type SaveProjectTaskResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveProjectTaskResponse"`

	SaveProjectTaskResult int32 `xml:"SaveProjectTaskResult,omitempty" json:"SaveProjectTaskResult,omitempty"`
}

type GetMyProjectTasks struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetMyProjectTasks"`
}

type GetMyProjectTasksResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetMyProjectTasksResponse"`

	GetMyProjectTasksResult *ArrayOfTask `xml:"GetMyProjectTasksResult,omitempty" json:"GetMyProjectTasksResult,omitempty"`
}

type GetProjectRoles struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectRoles"`
}

type GetProjectRolesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectRolesResponse"`

	GetProjectRolesResult *ArrayOfRole `xml:"GetProjectRolesResult,omitempty" json:"GetProjectRolesResult,omitempty"`
}

type GetProjectTypes struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectTypes"`
}

type GetProjectTypesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectTypesResponse"`

	GetProjectTypesResult *ArrayOfKeyValuePair `xml:"GetProjectTypesResult,omitempty" json:"GetProjectTypesResult,omitempty"`
}

type GetProjectStatuses struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectStatuses"`
}

type GetProjectStatusesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectStatusesResponse"`

	GetProjectStatusesResult *ArrayOfStatus `xml:"GetProjectStatusesResult,omitempty" json:"GetProjectStatusesResult,omitempty"`
}

type GetPipeLines struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetPipeLines"`
}

type GetPipeLinesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetPipeLinesResponse"`

	GetPipeLinesResult *ArrayOfKeyValuePair `xml:"GetPipeLinesResult,omitempty" json:"GetPipeLinesResult,omitempty"`
}

type GetCategories struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCategories"`
}

type GetCategoriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetCategoriesResponse"`

	GetCategoriesResult *ArrayOfKeyValuePair `xml:"GetCategoriesResult,omitempty" json:"GetCategoriesResult,omitempty"`
}

type SaveProject struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveProject"`

	Project *Project `xml:"project,omitempty" json:"project,omitempty"`
}

type SaveProjectResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveProjectResponse"`

	SaveProjectResult int32 `xml:"SaveProjectResult,omitempty" json:"SaveProjectResult,omitempty"`
}

type GetDeactivatedProjects struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetDeactivatedProjects"`

	Ps *ProjectSearch `xml:"ps,omitempty" json:"ps,omitempty"`
}

type GetDeactivatedProjectsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetDeactivatedProjectsResponse"`

	GetDeactivatedProjectsResult *ArrayOfProject `xml:"GetDeactivatedProjectsResult,omitempty" json:"GetDeactivatedProjectsResult,omitempty"`
}

type GetProjectParticipants struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectParticipants"`

	ProjectIds *ArrayOfInt `xml:"ProjectIds,omitempty" json:"ProjectIds,omitempty"`

	ChangedAfter *soap.XSDDateTime `xml:"ChangedAfter,omitempty" json:"ChangedAfter,omitempty"`
}

type GetProjectParticipantsResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetProjectParticipantsResponse"`

	GetProjectParticipantsResult *ArrayOfProjectParticipants `xml:"GetProjectParticipantsResult,omitempty" json:"GetProjectParticipantsResult,omitempty"`
}

type ArrayOfProjectShort struct {
	ProjectShort []*ProjectShort `xml:"ProjectShort,omitempty" json:"ProjectShort,omitempty"`
}

type ProjectShort struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`
}

type ProjectSearch struct {
	ProjectIds *ArrayOfInt `xml:"ProjectIds,omitempty" json:"ProjectIds,omitempty"`

	MyProjects bool `xml:"MyProjects,omitempty" json:"MyProjects,omitempty"`

	AllOpenProjects bool `xml:"AllOpenProjects,omitempty" json:"AllOpenProjects,omitempty"`

	CustomerId int32 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	Search string `xml:"Search,omitempty" json:"Search,omitempty"`

	ChangedAfter soap.XSDDateTime `xml:"ChangedAfter,omitempty" json:"ChangedAfter,omitempty"`

	StartedAfter soap.XSDDateTime `xml:"StartedAfter,omitempty" json:"StartedAfter,omitempty"`

	StartedBefore soap.XSDDateTime `xml:"StartedBefore,omitempty" json:"StartedBefore,omitempty"`
}

type ArrayOfInt struct {
	Int []int32 `xml:"int,omitempty" json:"int,omitempty"`
}

type ArrayOfProject struct {
	Project []*Project `xml:"Project,omitempty" json:"Project,omitempty"`
}

type Project struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Enabled bool `xml:"Enabled,omitempty" json:"Enabled,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	RawName string `xml:"RawName,omitempty" json:"RawName,omitempty"`

	NameDisplay *ProjectNameType `xml:"NameDisplay,omitempty" json:"NameDisplay,omitempty"`

	QuickListed bool `xml:"QuickListed,omitempty" json:"QuickListed,omitempty"`

	DateChanged soap.XSDDateTime `xml:"DateChanged,omitempty" json:"DateChanged,omitempty"`

	DateStart soap.XSDDateTime `xml:"DateStart,omitempty" json:"DateStart,omitempty"`

	DateStop soap.XSDDateTime `xml:"DateStop,omitempty" json:"DateStop,omitempty"`

	DateRegistered soap.XSDDateTime `xml:"DateRegistered,omitempty" json:"DateRegistered,omitempty"`

	CustomerId int32 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	CustomerName string `xml:"CustomerName,omitempty" json:"CustomerName,omitempty"`

	InvoiceTemplateId string `xml:"InvoiceTemplateId,omitempty" json:"InvoiceTemplateId,omitempty"`

	OrderReferenceNumber string `xml:"OrderReferenceNumber,omitempty" json:"OrderReferenceNumber,omitempty"`

	DepartmentId *int32 `xml:"DepartmentId,omitempty" json:"DepartmentId,omitempty"`

	CustomerReference string `xml:"CustomerReference,omitempty" json:"CustomerReference,omitempty"`

	Owner int32 `xml:"Owner,omitempty" json:"Owner,omitempty"`

	Pipeline int32 `xml:"Pipeline,omitempty" json:"Pipeline,omitempty"`

	TypeId int32 `xml:"TypeId,omitempty" json:"TypeId,omitempty"`

	TypeName string `xml:"TypeName,omitempty" json:"TypeName,omitempty"`

	StatusId int32 `xml:"StatusId,omitempty" json:"StatusId,omitempty"`

	StatusName string `xml:"StatusName,omitempty" json:"StatusName,omitempty"`

	NeedApproval *TriState `xml:"NeedApproval,omitempty" json:"NeedApproval,omitempty"`

	MultiCustomer bool `xml:"MultiCustomer,omitempty" json:"MultiCustomer,omitempty"`

	Description string `xml:"Description,omitempty" json:"Description,omitempty"`

	WorkTypeId int32 `xml:"WorkTypeId,omitempty" json:"WorkTypeId,omitempty"`

	WorkTypeName string `xml:"WorkTypeName,omitempty" json:"WorkTypeName,omitempty"`

	TimeReg *TimeRegType `xml:"TimeReg,omitempty" json:"TimeReg,omitempty"`

	Version int16 `xml:"Version,omitempty" json:"Version,omitempty"`

	IsFoldersAdded *TriState `xml:"IsFoldersAdded,omitempty" json:"IsFoldersAdded,omitempty"`

	OverrideWorkTypeTask *TriState `xml:"OverrideWorkTypeTask,omitempty" json:"OverrideWorkTypeTask,omitempty"`

	Participants *ArrayOfInt `xml:"Participants,omitempty" json:"Participants,omitempty"`

	BudgetHourCost *float64 `xml:"BudgetHourCost,omitempty" json:"BudgetHourCost,omitempty"`

	BudgetHour *float64 `xml:"BudgetHour,omitempty" json:"BudgetHour,omitempty"`

	FixedPrice *bool `xml:"FixedPrice,omitempty" json:"FixedPrice,omitempty"`

	Budget *int32 `xml:"Budget,omitempty" json:"Budget,omitempty"`

	UseProjectOwnerAsOurReference *bool `xml:"UseProjectOwnerAsOurReference,omitempty" json:"UseProjectOwnerAsOurReference,omitempty"`
}

type ArrayOfTask struct {
	Task []*Task `xml:"Task,omitempty" json:"Task,omitempty"`
}

type Task struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Description string `xml:"Description,omitempty" json:"Description,omitempty"`

	DateStart soap.XSDDateTime `xml:"DateStart,omitempty" json:"DateStart,omitempty"`

	DateStop soap.XSDDateTime `xml:"DateStop,omitempty" json:"DateStop,omitempty"`

	Overtime float64 `xml:"Overtime,omitempty" json:"Overtime,omitempty"`

	Parent int32 `xml:"Parent,omitempty" json:"Parent,omitempty"`

	Priority int32 `xml:"Priority,omitempty" json:"Priority,omitempty"`

	Project int32 `xml:"Project,omitempty" json:"Project,omitempty"`

	ProjectLink int32 `xml:"ProjectLink,omitempty" json:"ProjectLink,omitempty"`

	Status *int32 `xml:"Status,omitempty" json:"Status,omitempty"`

	WorkTypeId int32 `xml:"WorkTypeId,omitempty" json:"WorkTypeId,omitempty"`

	Estimate int32 `xml:"Estimate,omitempty" json:"Estimate,omitempty"`

	Registered float64 `xml:"Registered,omitempty" json:"Registered,omitempty"`

	Participants *ArrayOfInt `xml:"Participants,omitempty" json:"Participants,omitempty"`

	ProjectName string `xml:"ProjectName,omitempty" json:"ProjectName,omitempty"`

	CategoryId int32 `xml:"CategoryId,omitempty" json:"CategoryId,omitempty"`

	SubStatus string `xml:"SubStatus,omitempty" json:"SubStatus,omitempty"`
}

type ArrayOfRole struct {
	Role []*Role `xml:"Role,omitempty" json:"Role,omitempty"`
}

type Role struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Parent int32 `xml:"Parent,omitempty" json:"Parent,omitempty"`
}

type ArrayOfKeyValuePair struct {
	KeyValuePair []*KeyValuePair `xml:"KeyValuePair,omitempty" json:"KeyValuePair,omitempty"`
}

type KeyValuePair struct {
	Key string `xml:"Key,omitempty" json:"Key,omitempty"`

	Value string `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfStatus struct {
	Status []*Status `xml:"Status,omitempty" json:"Status,omitempty"`
}

type Status struct {
	Id int32 `xml:"Id,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Active bool `xml:"Active,omitempty" json:"Active,omitempty"`
}

type ArrayOfProjectParticipants struct {
	ProjectParticipants []*ProjectParticipants `xml:"ProjectParticipants,omitempty" json:"ProjectParticipants,omitempty"`
}

type ProjectParticipants struct {
	ProjectId int32 `xml:"ProjectId,omitempty" json:"ProjectId,omitempty"`

	Participants *ArrayOfParticipant `xml:"Participants,omitempty" json:"Participants,omitempty"`
}

type ArrayOfParticipant struct {
	Participant []*Participant `xml:"Participant,omitempty" json:"Participant,omitempty"`
}

type Participant struct {
	ContactId int32 `xml:"ContactId,omitempty" json:"ContactId,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Role *Role `xml:"Role,omitempty" json:"Role,omitempty"`

	State int32 `xml:"State,omitempty" json:"State,omitempty"`

	StateName *ProjectParticipantState `xml:"StateName,omitempty" json:"StateName,omitempty"`
}

type ProjectServiceSoap interface {

	/* Gets a list of projects with id and name */
	GetProjectNameList(request *GetProjectNameList) (*GetProjectNameListResponse, error)

	GetProjectNameListContext(ctx context.Context, request *GetProjectNameList) (*GetProjectNameListResponse, error)

	/* Gets a list of all deactivated projects with id and name */
	GetDeactivatedProjectNameList(request *GetDeactivatedProjectNameList) (*GetDeactivatedProjectNameListResponse, error)

	GetDeactivatedProjectNameListContext(ctx context.Context, request *GetDeactivatedProjectNameList) (*GetDeactivatedProjectNameListResponse, error)

	/* Get a list of Projects. */
	GetProjectList(request *GetProjectList) (*GetProjectListResponse, error)

	GetProjectListContext(ctx context.Context, request *GetProjectList) (*GetProjectListResponse, error)

	/* Get a detailed list of Projects. */
	GetProjectsDetailed(request *GetProjectsDetailed) (*GetProjectsDetailedResponse, error)

	GetProjectsDetailedContext(ctx context.Context, request *GetProjectsDetailed) (*GetProjectsDetailedResponse, error)

	/* Get a single project. */
	GetSingleProject(request *GetSingleProject) (*GetSingleProjectResponse, error)

	GetSingleProjectContext(ctx context.Context, request *GetSingleProject) (*GetSingleProjectResponse, error)

	/* Get a list of tasks for a specific project. */
	GetProjectTasks(request *GetProjectTasks) (*GetProjectTasksResponse, error)

	GetProjectTasksContext(ctx context.Context, request *GetProjectTasks) (*GetProjectTasksResponse, error)

	/* Saves a task. */
	SaveProjectTask(request *SaveProjectTask) (*SaveProjectTaskResponse, error)

	SaveProjectTaskContext(ctx context.Context, request *SaveProjectTask) (*SaveProjectTaskResponse, error)

	/* Get a list of the currently logged on user's tasks */
	GetMyProjectTasks(request *GetMyProjectTasks) (*GetMyProjectTasksResponse, error)

	GetMyProjectTasksContext(ctx context.Context, request *GetMyProjectTasks) (*GetMyProjectTasksResponse, error)

	/* Gets a list of project roles */
	GetProjectRoles(request *GetProjectRoles) (*GetProjectRolesResponse, error)

	GetProjectRolesContext(ctx context.Context, request *GetProjectRoles) (*GetProjectRolesResponse, error)

	/* Gets a list of project types */
	GetProjectTypes(request *GetProjectTypes) (*GetProjectTypesResponse, error)

	GetProjectTypesContext(ctx context.Context, request *GetProjectTypes) (*GetProjectTypesResponse, error)

	/* Gets a list of project task statuses */
	GetProjectStatuses(request *GetProjectStatuses) (*GetProjectStatusesResponse, error)

	GetProjectStatusesContext(ctx context.Context, request *GetProjectStatuses) (*GetProjectStatusesResponse, error)

	/* Gets a key/value list of project pipelines (substatuses). Key = Id, Value = Name */
	GetPipeLines(request *GetPipeLines) (*GetPipeLinesResponse, error)

	GetPipeLinesContext(ctx context.Context, request *GetPipeLines) (*GetPipeLinesResponse, error)

	/* Gets a key/value list of categories. Key = Id, Value = Name */
	GetCategories(request *GetCategories) (*GetCategoriesResponse, error)

	GetCategoriesContext(ctx context.Context, request *GetCategories) (*GetCategoriesResponse, error)

	/* Saves a project and returns its ID */
	SaveProject(request *SaveProject) (*SaveProjectResponse, error)

	SaveProjectContext(ctx context.Context, request *SaveProject) (*SaveProjectResponse, error)

	/* GetProjectsDetailed for deactivated projects, does not support freetext search */
	GetDeactivatedProjects(request *GetDeactivatedProjects) (*GetDeactivatedProjectsResponse, error)

	GetDeactivatedProjectsContext(ctx context.Context, request *GetDeactivatedProjects) (*GetDeactivatedProjectsResponse, error)

	/* Get all participants for a list of projects */
	GetProjectParticipants(request *GetProjectParticipants) (*GetProjectParticipantsResponse, error)

	GetProjectParticipantsContext(ctx context.Context, request *GetProjectParticipants) (*GetProjectParticipantsResponse, error)
}

type projectServiceSoap struct {
	client *soap.Client
}

func NewProjectServiceSoap(client *soap.Client) ProjectServiceSoap {
	return &projectServiceSoap{
		client: client,
	}
}

func (service *projectServiceSoap) GetProjectNameListContext(ctx context.Context, request *GetProjectNameList) (*GetProjectNameListResponse, error) {
	response := new(GetProjectNameListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectNameList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectNameList(request *GetProjectNameList) (*GetProjectNameListResponse, error) {
	return service.GetProjectNameListContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetDeactivatedProjectNameListContext(ctx context.Context, request *GetDeactivatedProjectNameList) (*GetDeactivatedProjectNameListResponse, error) {
	response := new(GetDeactivatedProjectNameListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetDeactivatedProjectNameList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetDeactivatedProjectNameList(request *GetDeactivatedProjectNameList) (*GetDeactivatedProjectNameListResponse, error) {
	return service.GetDeactivatedProjectNameListContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectListContext(ctx context.Context, request *GetProjectList) (*GetProjectListResponse, error) {
	response := new(GetProjectListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectList(request *GetProjectList) (*GetProjectListResponse, error) {
	return service.GetProjectListContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectsDetailedContext(ctx context.Context, request *GetProjectsDetailed) (*GetProjectsDetailedResponse, error) {
	response := new(GetProjectsDetailedResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectsDetailed", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectsDetailed(request *GetProjectsDetailed) (*GetProjectsDetailedResponse, error) {
	return service.GetProjectsDetailedContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetSingleProjectContext(ctx context.Context, request *GetSingleProject) (*GetSingleProjectResponse, error) {
	response := new(GetSingleProjectResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetSingleProject", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetSingleProject(request *GetSingleProject) (*GetSingleProjectResponse, error) {
	return service.GetSingleProjectContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectTasksContext(ctx context.Context, request *GetProjectTasks) (*GetProjectTasksResponse, error) {
	response := new(GetProjectTasksResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectTasks", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectTasks(request *GetProjectTasks) (*GetProjectTasksResponse, error) {
	return service.GetProjectTasksContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) SaveProjectTaskContext(ctx context.Context, request *SaveProjectTask) (*SaveProjectTaskResponse, error) {
	response := new(SaveProjectTaskResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveProjectTask", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) SaveProjectTask(request *SaveProjectTask) (*SaveProjectTaskResponse, error) {
	return service.SaveProjectTaskContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetMyProjectTasksContext(ctx context.Context, request *GetMyProjectTasks) (*GetMyProjectTasksResponse, error) {
	response := new(GetMyProjectTasksResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetMyProjectTasks", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetMyProjectTasks(request *GetMyProjectTasks) (*GetMyProjectTasksResponse, error) {
	return service.GetMyProjectTasksContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectRolesContext(ctx context.Context, request *GetProjectRoles) (*GetProjectRolesResponse, error) {
	response := new(GetProjectRolesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectRoles", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectRoles(request *GetProjectRoles) (*GetProjectRolesResponse, error) {
	return service.GetProjectRolesContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectTypesContext(ctx context.Context, request *GetProjectTypes) (*GetProjectTypesResponse, error) {
	response := new(GetProjectTypesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectTypes", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectTypes(request *GetProjectTypes) (*GetProjectTypesResponse, error) {
	return service.GetProjectTypesContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectStatusesContext(ctx context.Context, request *GetProjectStatuses) (*GetProjectStatusesResponse, error) {
	response := new(GetProjectStatusesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectStatuses", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectStatuses(request *GetProjectStatuses) (*GetProjectStatusesResponse, error) {
	return service.GetProjectStatusesContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetPipeLinesContext(ctx context.Context, request *GetPipeLines) (*GetPipeLinesResponse, error) {
	response := new(GetPipeLinesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetPipeLines", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetPipeLines(request *GetPipeLines) (*GetPipeLinesResponse, error) {
	return service.GetPipeLinesContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetCategoriesContext(ctx context.Context, request *GetCategories) (*GetCategoriesResponse, error) {
	response := new(GetCategoriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetCategories", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetCategories(request *GetCategories) (*GetCategoriesResponse, error) {
	return service.GetCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) SaveProjectContext(ctx context.Context, request *SaveProject) (*SaveProjectResponse, error) {
	response := new(SaveProjectResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveProject", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) SaveProject(request *SaveProject) (*SaveProjectResponse, error) {
	return service.SaveProjectContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetDeactivatedProjectsContext(ctx context.Context, request *GetDeactivatedProjects) (*GetDeactivatedProjectsResponse, error) {
	response := new(GetDeactivatedProjectsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetDeactivatedProjects", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetDeactivatedProjects(request *GetDeactivatedProjects) (*GetDeactivatedProjectsResponse, error) {
	return service.GetDeactivatedProjectsContext(
		context.Background(),
		request,
	)
}

func (service *projectServiceSoap) GetProjectParticipantsContext(ctx context.Context, request *GetProjectParticipants) (*GetProjectParticipantsResponse, error) {
	response := new(GetProjectParticipantsResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetProjectParticipants", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *projectServiceSoap) GetProjectParticipants(request *GetProjectParticipants) (*GetProjectParticipantsResponse, error) {
	return service.GetProjectParticipantsContext(
		context.Background(),
		request,
	)
}
