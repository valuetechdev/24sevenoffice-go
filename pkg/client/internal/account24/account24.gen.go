// Code generated by gowsdl DO NOT EDIT.

package account24

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ResponsType string

const (
	ResponsTypeOk ResponsType = "Ok"

	ResponsTypeDuplicateData ResponsType = "DuplicateData"

	ResponsTypeDataAlreadySaved ResponsType = "DataAlreadySaved"

	ResponsTypeNotAuthenticated ResponsType = "NotAuthenticated"

	ResponsTypeSystemError ResponsType = "SystemError"

	ResponsTypeException ResponsType = "Exception"

	ResponsTypeNotSaved ResponsType = "NotSaved"
)

type ErrorType string

const (
	ErrorTypeOk ErrorType = "Ok"

	ErrorTypeAccountDontExist ErrorType = "AccountDontExist"

	ErrorTypeNameDontMatch ErrorType = "NameDontMatch"
)

type SaveBundleList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveBundleList"`

	BundleList *BundleList `xml:"BundleList,omitempty" json:"BundleList,omitempty"`
}

type SaveBundleListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices SaveBundleListResponse"`

	SaveBundleListResult *SaveResponse `xml:"SaveBundleListResult,omitempty" json:"SaveBundleListResult,omitempty"`
}

type GetEntryId struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetEntryId"`

	ArgEntryId *EntryId `xml:"argEntryId,omitempty" json:"argEntryId,omitempty"`
}

type GetEntryIdResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetEntryIdResponse"`

	GetEntryIdResult *EntryId `xml:"GetEntryIdResult,omitempty" json:"GetEntryIdResult,omitempty"`
}

type GetAccountList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetAccountList"`
}

type GetAccountListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetAccountListResponse"`

	GetAccountListResult *ArrayOfAccountData `xml:"GetAccountListResult,omitempty" json:"GetAccountListResult,omitempty"`
}

type GetTypeList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetTypeList"`
}

type GetTypeListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetTypeListResponse"`

	GetTypeListResult *ArrayOfTypeData `xml:"GetTypeListResult,omitempty" json:"GetTypeListResult,omitempty"`
}

type GetTaxCodeList struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetTaxCodeList"`
}

type GetTaxCodeListResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices GetTaxCodeListResponse"`

	GetTaxCodeListResult *ArrayOfTaxCodeElement `xml:"GetTaxCodeListResult,omitempty" json:"GetTaxCodeListResult,omitempty"`
}

type CheckAccountNo struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices CheckAccountNo"`

	AccountList *ArrayOfAccountData `xml:"accountList,omitempty" json:"accountList,omitempty"`
}

type CheckAccountNoResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices CheckAccountNoResponse"`

	CheckAccountNoResult *ArrayOfAccountDataErrors `xml:"CheckAccountNoResult,omitempty" json:"CheckAccountNoResult,omitempty"`
}

type CreateLink struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices CreateLink"`
}

type CreateLinkResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices CreateLinkResponse"`

	CreateLinkResult int32 `xml:"CreateLinkResult,omitempty" json:"CreateLinkResult,omitempty"`
}

type AddLinkEntries struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices AddLinkEntries"`

	LinkEntryItem *LinkEntryItem `xml:"linkEntryItem,omitempty" json:"linkEntryItem,omitempty"`
}

type AddLinkEntriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices AddLinkEntriesResponse"`

	AddLinkEntriesResult bool `xml:"AddLinkEntriesResult,omitempty" json:"AddLinkEntriesResult,omitempty"`
}

type ReplaceLinkEntries struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices ReplaceLinkEntries"`

	LinkEntryItem *LinkEntryItem `xml:"linkEntryItem,omitempty" json:"linkEntryItem,omitempty"`
}

type ReplaceLinkEntriesResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices ReplaceLinkEntriesResponse"`

	ReplaceLinkEntriesResult bool `xml:"ReplaceLinkEntriesResult,omitempty" json:"ReplaceLinkEntriesResult,omitempty"`
}

type UpdateEntryDueDate struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices UpdateEntryDueDate"`

	EntryItems *ArrayOfEntryItem `xml:"entryItems,omitempty" json:"entryItems,omitempty"`
}

type UpdateEntryDueDateResponse struct {
	XMLName xml.Name `xml:"http://24sevenOffice.com/webservices UpdateEntryDueDateResponse"`

	UpdateEntryDueDateResult *ArrayOfEntryItem `xml:"UpdateEntryDueDateResult,omitempty" json:"UpdateEntryDueDateResult,omitempty"`
}

type BundleList struct {
	Bundles *ArrayOfBundle `xml:"Bundles,omitempty" json:"Bundles,omitempty"`

	AllowDifference bool `xml:"AllowDifference,omitempty" json:"AllowDifference,omitempty"`

	DirectLedger bool `xml:"DirectLedger,omitempty" json:"DirectLedger,omitempty"`

	SaveOption byte `xml:"SaveOption,omitempty" json:"SaveOption,omitempty"`

	DefaultCustomerId int32 `xml:"DefaultCustomerId,omitempty" json:"DefaultCustomerId,omitempty"`

	IgnoreWarnings *ArrayOfString `xml:"IgnoreWarnings,omitempty" json:"IgnoreWarnings,omitempty"`
}

type ArrayOfBundle struct {
	Bundle []*Bundle `xml:"Bundle,omitempty" json:"Bundle,omitempty"`
}

type Bundle struct {
	YearId int32 `xml:"YearId,omitempty" json:"YearId,omitempty"`

	Vouchers *ArrayOfVoucher `xml:"Vouchers,omitempty" json:"Vouchers,omitempty"`

	Sort int32 `xml:"Sort,omitempty" json:"Sort,omitempty"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	BundleDirectAccounting bool `xml:"BundleDirectAccounting,omitempty" json:"BundleDirectAccounting,omitempty"`

	UseAutoBaseRate bool `xml:"UseAutoBaseRate,omitempty" json:"UseAutoBaseRate,omitempty"`
}

type ArrayOfVoucher struct {
	Voucher []*Voucher `xml:"Voucher,omitempty" json:"Voucher,omitempty"`
}

type Voucher struct {
	TransactionNo int32 `xml:"TransactionNo,omitempty" json:"TransactionNo,omitempty"`

	Entries *ArrayOfEntry `xml:"Entries,omitempty" json:"Entries,omitempty"`

	Sort int32 `xml:"Sort,omitempty" json:"Sort,omitempty"`

	DifferenceOptions *DifferenceOptions `xml:"DifferenceOptions,omitempty" json:"DifferenceOptions,omitempty"`
}

type ArrayOfEntry struct {
	Entry []*Entry `xml:"Entry,omitempty" json:"Entry,omitempty"`
}

type Entry struct {
	SequenceId float64 `xml:"SequenceId,omitempty" json:"SequenceId,omitempty"`

	CustomerId int32 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	AccountNo int32 `xml:"AccountNo,omitempty" json:"AccountNo,omitempty"`

	Date soap.XSDDateTime `xml:"Date,omitempty" json:"Date,omitempty"`

	DueDate soap.XSDDateTime `xml:"DueDate,omitempty" json:"DueDate,omitempty"`

	Amount float64 `xml:"Amount,omitempty" json:"Amount,omitempty"`

	VatAmount float64 `xml:"VatAmount,omitempty" json:"VatAmount,omitempty"`

	CurrencyId string `xml:"CurrencyId,omitempty" json:"CurrencyId,omitempty"`

	BaseRate float64 `xml:"BaseRate,omitempty" json:"BaseRate,omitempty"`

	CurrencyRate float64 `xml:"CurrencyRate,omitempty" json:"CurrencyRate,omitempty"`

	CurrencyUnit int16 `xml:"CurrencyUnit,omitempty" json:"CurrencyUnit,omitempty"`

	DepartmentId int32 `xml:"DepartmentId,omitempty" json:"DepartmentId,omitempty"`

	ProjectId int32 `xml:"ProjectId,omitempty" json:"ProjectId,omitempty"`

	UserDefinedDimensions *ArrayOfUserDefinedDimension `xml:"UserDefinedDimensions,omitempty" json:"UserDefinedDimensions,omitempty"`

	InvoiceReferenceNo string `xml:"InvoiceReferenceNo,omitempty" json:"InvoiceReferenceNo,omitempty"`

	InvoiceOcr string `xml:"InvoiceOcr,omitempty" json:"InvoiceOcr,omitempty"`

	TaxNo string `xml:"TaxNo,omitempty" json:"TaxNo,omitempty"`

	PeriodDate soap.XSDDateTime `xml:"PeriodDate,omitempty" json:"PeriodDate,omitempty"`

	Comment string `xml:"Comment,omitempty" json:"Comment,omitempty"`

	StampNo int32 `xml:"StampNo,omitempty" json:"StampNo,omitempty"`

	BankAccountNo string `xml:"BankAccountNo,omitempty" json:"BankAccountNo,omitempty"`

	LinkId *Guid `xml:"LinkId,omitempty" json:"LinkId,omitempty"`

	Links *ArrayOfLinkModel `xml:"Links,omitempty" json:"Links,omitempty"`
}

type ArrayOfUserDefinedDimension struct {
	UserDefinedDimension []*UserDefinedDimension `xml:"UserDefinedDimension,omitempty" json:"UserDefinedDimension,omitempty"`
}

type UserDefinedDimension struct {
	Type int32 `xml:"Type,omitempty" json:"Type,omitempty"`

	Value string `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfLinkModel struct {
	LinkModel []*LinkModel `xml:"LinkModel,omitempty" json:"LinkModel,omitempty"`
}

type LinkModel struct {
	LineId *Guid `xml:"LineId,omitempty" json:"LineId,omitempty"`

	LinkId *Guid `xml:"LinkId,omitempty" json:"LinkId,omitempty"`
}

type DifferenceOptions struct {
	Threshold float64 `xml:"Threshold,omitempty" json:"Threshold,omitempty"`

	AccountId int32 `xml:"AccountId,omitempty" json:"AccountId,omitempty"`

	DueDate soap.XSDDateTime `xml:"DueDate,omitempty" json:"DueDate,omitempty"`

	Date soap.XSDDateTime `xml:"Date,omitempty" json:"Date,omitempty"`

	CurrencyId int32 `xml:"CurrencyId,omitempty" json:"CurrencyId,omitempty"`

	CurrencyUnit int16 `xml:"CurrencyUnit,omitempty" json:"CurrencyUnit,omitempty"`

	CurrencyRate float64 `xml:"CurrencyRate,omitempty" json:"CurrencyRate,omitempty"`

	Comment string `xml:"Comment,omitempty" json:"Comment,omitempty"`

	CustomerId int32 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	Period int16 `xml:"Period,omitempty" json:"Period,omitempty"`

	LinkId *Guid `xml:"LinkId,omitempty" json:"LinkId,omitempty"`

	InvoiceOcr string `xml:"InvoiceOcr,omitempty" json:"InvoiceOcr,omitempty"`

	DepartmentId int32 `xml:"DepartmentId,omitempty" json:"DepartmentId,omitempty"`

	ProjectId int32 `xml:"ProjectId,omitempty" json:"ProjectId,omitempty"`

	BankAccountNo string `xml:"BankAccountNo,omitempty" json:"BankAccountNo,omitempty"`
}

type ArrayOfString struct {
	Astring []*string `xml:"string,omitempty" json:"string,omitempty"`
}

type SaveResponse struct {
	Type *ResponsType `xml:"Type,omitempty" json:"Type,omitempty"`

	Description string `xml:"Description,omitempty" json:"Description,omitempty"`
}

type EntryId struct {
	Date soap.XSDDateTime `xml:"Date,omitempty" json:"Date,omitempty"`

	SortNo int32 `xml:"SortNo,omitempty" json:"SortNo,omitempty"`

	EntryNo int32 `xml:"EntryNo,omitempty" json:"EntryNo,omitempty"`
}

type ArrayOfAccountData struct {
	AccountData []*AccountData `xml:"AccountData,omitempty" json:"AccountData,omitempty"`
}

type AccountData struct {
	AccountId int32 `xml:"AccountId,omitempty" json:"AccountId,omitempty"`

	AccountNo int16 `xml:"AccountNo,omitempty" json:"AccountNo,omitempty"`

	AccountName string `xml:"AccountName,omitempty" json:"AccountName,omitempty"`

	AccountTax int32 `xml:"AccountTax,omitempty" json:"AccountTax,omitempty"`

	TaxNo int32 `xml:"TaxNo,omitempty" json:"TaxNo,omitempty"`
}

type ArrayOfTypeData struct {
	TypeData []*TypeData `xml:"TypeData,omitempty" json:"TypeData,omitempty"`
}

type TypeData struct {
	TypeId int32 `xml:"TypeId,omitempty" json:"TypeId,omitempty"`

	Title string `xml:"Title,omitempty" json:"Title,omitempty"`

	EntrySeriesId int32 `xml:"EntrySeriesId,omitempty" json:"EntrySeriesId,omitempty"`

	TypeNo int32 `xml:"TypeNo,omitempty" json:"TypeNo,omitempty"`
}

type ArrayOfTaxCodeElement struct {
	TaxCodeElement []*TaxCodeElement `xml:"TaxCodeElement,omitempty" json:"TaxCodeElement,omitempty"`
}

type TaxCodeElement struct {
	TaxId int32 `xml:"TaxId,omitempty" json:"TaxId,omitempty"`

	TaxNo string `xml:"TaxNo,omitempty" json:"TaxNo,omitempty"`

	TaxName string `xml:"TaxName,omitempty" json:"TaxName,omitempty"`

	TaxRate float64 `xml:"TaxRate,omitempty" json:"TaxRate,omitempty"`

	AccountNo *int16 `xml:"AccountNo,omitempty" json:"AccountNo,omitempty"`
}

type ArrayOfAccountDataErrors struct {
	AccountDataErrors []*AccountDataErrors `xml:"AccountDataErrors,omitempty" json:"AccountDataErrors,omitempty"`
}

type AccountDataErrors struct {
	*AccountData

	Error *ErrorType `xml:"Error,omitempty" json:"Error,omitempty"`
}

type LinkEntryItem struct {
	LineIds *ArrayOfGuid `xml:"LineIds,omitempty" json:"LineIds,omitempty"`

	LinkId int32 `xml:"LinkId,omitempty" json:"LinkId,omitempty"`
}

type ArrayOfGuid struct {
	Guid []*Guid `xml:"guid,omitempty" json:"guid,omitempty"`
}

type ArrayOfEntryItem struct {
	EntryItem []*EntryItem `xml:"EntryItem,omitempty" json:"EntryItem,omitempty"`
}

type EntryItem struct {
	LineId *Guid `xml:"LineId,omitempty" json:"LineId,omitempty"`

	DueDate soap.XSDDateTime `xml:"DueDate,omitempty" json:"DueDate,omitempty"`
}

type Guid string

type AccountServiceSoap interface {

	/* Saves a list of Account bundles to 24SO system */
	SaveBundleList(request *SaveBundleList) (*SaveBundleListResponse, error)

	SaveBundleListContext(ctx context.Context, request *SaveBundleList) (*SaveBundleListResponse, error)

	/* Get the next EntryId */
	GetEntryId(request *GetEntryId) (*GetEntryIdResponse, error)

	GetEntryIdContext(ctx context.Context, request *GetEntryId) (*GetEntryIdResponse, error)

	/* Get a list of all accounts */
	GetAccountList(request *GetAccountList) (*GetAccountListResponse, error)

	GetAccountListContext(ctx context.Context, request *GetAccountList) (*GetAccountListResponse, error)

	/* Get a list of existing types */
	GetTypeList(request *GetTypeList) (*GetTypeListResponse, error)

	GetTypeListContext(ctx context.Context, request *GetTypeList) (*GetTypeListResponse, error)

	/* Gets the complete tax code list */
	GetTaxCodeList(request *GetTaxCodeList) (*GetTaxCodeListResponse, error)

	GetTaxCodeListContext(ctx context.Context, request *GetTaxCodeList) (*GetTaxCodeListResponse, error)

	/* Checks if accounts exists */
	CheckAccountNo(request *CheckAccountNo) (*CheckAccountNoResponse, error)

	CheckAccountNoContext(ctx context.Context, request *CheckAccountNo) (*CheckAccountNoResponse, error)

	/* Create an empty Link */
	CreateLink(request *CreateLink) (*CreateLinkResponse, error)

	CreateLinkContext(ctx context.Context, request *CreateLink) (*CreateLinkResponse, error)

	/* Connect existing Entries/Transactions to a LinkId */
	AddLinkEntries(request *AddLinkEntries) (*AddLinkEntriesResponse, error)

	AddLinkEntriesContext(ctx context.Context, request *AddLinkEntries) (*AddLinkEntriesResponse, error)

	/* Replace a LinkId for existing Entries/Transactions */
	ReplaceLinkEntries(request *ReplaceLinkEntries) (*ReplaceLinkEntriesResponse, error)

	ReplaceLinkEntriesContext(ctx context.Context, request *ReplaceLinkEntries) (*ReplaceLinkEntriesResponse, error)

	/* Update the Due Date of an Entry */
	UpdateEntryDueDate(request *UpdateEntryDueDate) (*UpdateEntryDueDateResponse, error)

	UpdateEntryDueDateContext(ctx context.Context, request *UpdateEntryDueDate) (*UpdateEntryDueDateResponse, error)
}

type accountServiceSoap struct {
	client *soap.Client
}

func NewAccountServiceSoap(client *soap.Client) AccountServiceSoap {
	return &accountServiceSoap{
		client: client,
	}
}

func (service *accountServiceSoap) SaveBundleListContext(ctx context.Context, request *SaveBundleList) (*SaveBundleListResponse, error) {
	response := new(SaveBundleListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/SaveBundleList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) SaveBundleList(request *SaveBundleList) (*SaveBundleListResponse, error) {
	return service.SaveBundleListContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) GetEntryIdContext(ctx context.Context, request *GetEntryId) (*GetEntryIdResponse, error) {
	response := new(GetEntryIdResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetEntryId", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) GetEntryId(request *GetEntryId) (*GetEntryIdResponse, error) {
	return service.GetEntryIdContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) GetAccountListContext(ctx context.Context, request *GetAccountList) (*GetAccountListResponse, error) {
	response := new(GetAccountListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetAccountList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) GetAccountList(request *GetAccountList) (*GetAccountListResponse, error) {
	return service.GetAccountListContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) GetTypeListContext(ctx context.Context, request *GetTypeList) (*GetTypeListResponse, error) {
	response := new(GetTypeListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetTypeList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) GetTypeList(request *GetTypeList) (*GetTypeListResponse, error) {
	return service.GetTypeListContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) GetTaxCodeListContext(ctx context.Context, request *GetTaxCodeList) (*GetTaxCodeListResponse, error) {
	response := new(GetTaxCodeListResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/GetTaxCodeList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) GetTaxCodeList(request *GetTaxCodeList) (*GetTaxCodeListResponse, error) {
	return service.GetTaxCodeListContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) CheckAccountNoContext(ctx context.Context, request *CheckAccountNo) (*CheckAccountNoResponse, error) {
	response := new(CheckAccountNoResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/CheckAccountNo", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) CheckAccountNo(request *CheckAccountNo) (*CheckAccountNoResponse, error) {
	return service.CheckAccountNoContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) CreateLinkContext(ctx context.Context, request *CreateLink) (*CreateLinkResponse, error) {
	response := new(CreateLinkResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/CreateLink", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) CreateLink(request *CreateLink) (*CreateLinkResponse, error) {
	return service.CreateLinkContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) AddLinkEntriesContext(ctx context.Context, request *AddLinkEntries) (*AddLinkEntriesResponse, error) {
	response := new(AddLinkEntriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/AddLinkEntries", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) AddLinkEntries(request *AddLinkEntries) (*AddLinkEntriesResponse, error) {
	return service.AddLinkEntriesContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) ReplaceLinkEntriesContext(ctx context.Context, request *ReplaceLinkEntries) (*ReplaceLinkEntriesResponse, error) {
	response := new(ReplaceLinkEntriesResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/ReplaceLinkEntries", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) ReplaceLinkEntries(request *ReplaceLinkEntries) (*ReplaceLinkEntriesResponse, error) {
	return service.ReplaceLinkEntriesContext(
		context.Background(),
		request,
	)
}

func (service *accountServiceSoap) UpdateEntryDueDateContext(ctx context.Context, request *UpdateEntryDueDate) (*UpdateEntryDueDateResponse, error) {
	response := new(UpdateEntryDueDateResponse)
	err := service.client.CallContext(ctx, "http://24sevenOffice.com/webservices/UpdateEntryDueDate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *accountServiceSoap) UpdateEntryDueDate(request *UpdateEntryDueDate) (*UpdateEntryDueDateResponse, error) {
	return service.UpdateEntryDueDateContext(
		context.Background(),
		request,
	)
}
